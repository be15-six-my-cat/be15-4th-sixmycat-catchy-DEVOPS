<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sixmycat.catchy.feature.jjure.query.mapper.JjureQueryMapper">

    <select id="findCommentsByJjureId" resultType="com.sixmycat.catchy.feature.jjure.query.dto.response.JjureCommentResponse">
        SELECT
        c.id AS commentId,
        c.member_id AS memberId,
        m.nickname,
        c.content,
        c.created_at,
        c.parent_comment_id AS parentCommentId
        FROM comment c
        JOIN member m ON c.member_id = m.id
        WHERE c.target_id = #{jjureId}
        AND c.target_type = 'JJURE'
        ORDER BY c.created_at ASC
    </select>

    <select id="existsByJjureId" resultType="boolean">
        SELECT EXISTS (
        SELECT 1 FROM jjure WHERE id = #{jjureId}
        )
    </select>

    <select id="findJjureBaseInfo" resultType="com.sixmycat.catchy.feature.jjure.query.dto.response.JjureBaseInfo">
        SELECT
        j.id,
        m.id AS authorId,
        m.nickname,
        m.profile_image AS profileImageUrl,
        j.file_key,
        j.caption,
        j.music_url AS musicUrl,
        (SELECT COUNT(*) FROM `like` l WHERE l.target_id = j.id AND l.target_type = 'JJURE') AS likeCount,
        (SELECT COUNT(*) FROM comment c WHERE c.target_id = j.id AND c.target_type = 'JJURE') AS commentCount,
        j.created_at,
        j.thumbnail_url as thumbnailUrl
        FROM jjure j
        JOIN member m ON j.member_id = m.id
        WHERE j.id = #{jjureId}
    </select>

    <select id="findLatestCommentPreview" resultType="com.sixmycat.catchy.common.dto.CommentPreview">
        SELECT
        m.nickname AS userNickname,
        c.content
        FROM comment c
        JOIN member m ON c.member_id = m.id
        WHERE c.target_id = #{jjureId}
        AND c.target_type = 'JJURE'
        ORDER BY c.created_at DESC
        LIMIT 1
    </select>

    <select id="isJjureLikedByUser" resultType="boolean">
        SELECT EXISTS (
        SELECT 1
        FROM `like`
        WHERE member_id = #{userId}
        AND target_id = #{jjureId}
        AND target_type = 'JJURE'
        )
    </select>

    <select id="findJjureList" resultType="com.sixmycat.catchy.feature.jjure.query.dto.response.JjureBaseInfo">
        SELECT
        j.id AS id,
        m.id AS authorId,
        m.nickname,
        m.profile_image AS profileImageUrl,
        j.file_key,
        j.caption,
        j.music_url AS musicUrl,
        (SELECT COUNT(*) FROM `like` l WHERE l.target_id = j.id AND l.target_type = 'JJURE') AS likeCount,
        (SELECT COUNT(*) FROM comment c WHERE c.target_id = j.id AND c.target_type = 'JJURE') AS commentCount,
        j.created_at,
        j.thumbnail_url
        FROM jjure j
        JOIN member m ON j.member_id = m.id
        WHERE j.deleted_at IS NULL
        AND (
        #{memberId} IS NULL
        OR NOT EXISTS (
        SELECT 1
        FROM block b
        WHERE b.blocker_id = #{memberId}
        AND b.blocked_id = j.member_id
        )
        )
        ORDER BY j.created_at DESC
    </select>


    <select id="findLikedJjures" resultType="com.sixmycat.catchy.feature.jjure.query.dto.response.JjureSummaryResponse">
        SELECT
        j.id AS jjureId,
        j.thumbnail_url,
        j.created_at
        FROM jjure j
        JOIN `like` l ON l.target_id = j.id
        WHERE l.member_id = #{memberId}
        AND l.target_type = 'JJURE'
        AND j.deleted_at IS NULL
        ORDER BY j.created_at DESC
    </select>

    <select id="findMyJjures" resultType="com.sixmycat.catchy.feature.jjure.query.dto.response.JjureSummaryResponse">
        SELECT
        j.id AS jjureId,
        j.thumbnail_url AS thumbnailUrl,
        j.created_at
        FROM jjure j
        WHERE j.member_id = #{memberId}
        AND j.deleted_at IS NULL
        ORDER BY j.created_at DESC
    </select>

    <select id="findJjuresByMemberId" resultType="com.sixmycat.catchy.feature.jjure.query.dto.response.JjureSummaryResponse">
        SELECT
        j.id AS jjureId,
        j.thumbnail_url AS thumbnailUrl,
        j.created_at
        FROM jjure j
        WHERE j.member_id = #{memberId}
        AND j.deleted_at IS NULL
        ORDER BY j.created_at DESC
    </select>
</mapper>
