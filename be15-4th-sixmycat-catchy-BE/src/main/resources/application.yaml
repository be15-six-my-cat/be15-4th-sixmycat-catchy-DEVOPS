server:
  port: 8000

spring:
  application:
    name: CATCHY
  servlet:
    multipart:
      max-file-size: 30MB
      max-request-size: 30MB

  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    url: jdbc:mariadb://${DB_HOST}:${DB_PORT}/${DB_NAME}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        physical_naming_strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy

  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}
      timeout : 6000ms # 연결 타임아웃
      lettuce:
        pool:
          max-active: 10  # 최대 활성 연결 수
          max-idle: 5  # 최대 유휴 연결 수
          min-idle: 1  # 최소 유휴 연결 수
          max-wait: 2000ms  # 최대 대기 시간

  cloud:
    aws:
      s3:
        bucket: ${AWS_BUCKET_NAME}
        jjure-bucket: ${JJURE_AWS_BUCKET_NAME}
      credentials:
        access-key: ${AWS_ACCESS_KEY}
        secret-key: ${AWS_SECRET_KEY}
        jjure-access-key: ${JJURE_AWS_ACCESS_KEY}
        jjure-secret-key: ${JJURE_AWS_SECRET_KEY}
      region:
        static: ap-northeast-2
        auto: false
      cloudfront:
        domain: ${CLOUDFRONT_URL}
      stack:
        auto: false

  mvc:
    static-path-pattern: /static/**

  security:
    oauth2:
      client:
        registration:
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            redirect-uri: ${NAVER_CLIENT_REDIRECT}
            authorization-grant-type: authorization_code
            scope:
              - name
              - email
            client-name: Naver
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret:
            redirect-uri: ${KAKAO_CLIENT_REDIRECT}
            authorization-grant-type: authorization_code
            scope:
              - account_email
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: ${GOOGLE_CLIENT_REDIRECT}
            authorization-grant-type: authorization_code
            scope:
              - email
              - profile
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub

mybatis:
  configuration:
    map-underscore-to-camel-case: true
  mapper-locations: classpath:/mappers/**/*.xml
  type-aliases-package: >
    com.sixmycat.catchy.feature.block.query.dto,
    com.sixmycat.catchy.feature.feed.query.dto.response,
    com.sixmycat.catchy.feature.follow.query.dto,
    com.sixmycat.catchy.feature.game.query.dto,
    com.sixmycat.catchy.feature.jjure.query.dto,
    com.sixmycat.catchy.feature.like.query.dto,
    com.sixmycat.catchy.feature.member.query.dto,
    com.sixmycat.catchy.feature.notification.query.dto
jwt:
  secret: ${JWT_SECRET}
  expiration: ${JWT_ACCESS_EXPIRATION}
  refresh-expiration: ${JWT_REFRESH_EXPIRATION}

image:
  image-dir: ${IMAGE_DIR}

springdoc:
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: method
    display-request-duration: true
  api-docs:
    path: /v3/api-docs

pagehelper:
  helper-dialect: mariadb
  reasonable: true
  support-methods-arguments: true
  params: count=countSql

app:
  front:
    signup-extra-url: ${FRONT_SIGNUP_EXTRA_URL}
    login-success-url: ${FRONT_LOGIN_SUCCESS_URL}



